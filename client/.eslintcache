[{"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\index.js":"1","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\language.js":"3","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\loginStep.js":"4","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\user.js":"5","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\write.js":"6","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\App.jsx":"7","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\auth_service.js":"8","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\http_client.js":"9","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\study_service.js":"10","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\user_service.js":"11","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\auth\\githubLogin.jsx":"12","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\main\\main.jsx":"13","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\postRegister\\postRegister.jsx":"14","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\setting\\setting.jsx":"15","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\common\\utils.js":"16","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\languageList.js":"17","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\study_list\\studyList.jsx":"18","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\banner\\banner.jsx":"19","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\nav_bar\\navbar.jsx":"20","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\language_bar_list\\languageBarList.jsx":"21","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\editor\\editorContainer.jsx":"22","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\writeButton\\writebuttonContainer.jsx":"23","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\writeButton\\writebutton.jsx":"24","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\editor\\editor.jsx":"25","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\study_item\\studyItem.jsx":"26","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\language_bar_item\\languageBarItem.jsx":"27","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_user\\loginUser.jsx":"28","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\modal_component\\modal.jsx":"29","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\login_modal\\loginModal.jsx":"30","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\post_modal\\postModal.jsx":"31","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\dropdown_bar\\dropdownBar.jsx":"32","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\portal\\portal.jsx":"33","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\google_button\\googleButton.jsx":"34","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\github_button\\githubButton.jsx":"35","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\kakao_button\\kakaoButton.jsx":"36","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\like_languages\\likeLanguages.jsx":"37","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\user_image_upload\\userImageUpload.jsx":"38"},{"size":2019,"mtime":1622215642956,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1615848233202,"results":"41","hashOfConfig":"40"},{"size":505,"mtime":1615848233207,"results":"42","hashOfConfig":"40"},{"size":659,"mtime":1619564639120,"results":"43","hashOfConfig":"40"},{"size":4482,"mtime":1622216462406,"results":"44","hashOfConfig":"40"},{"size":1750,"mtime":1621748183493,"results":"45","hashOfConfig":"40"},{"size":1703,"mtime":1621751932899,"results":"46","hashOfConfig":"40"},{"size":1192,"mtime":1621053299397,"results":"47","hashOfConfig":"40"},{"size":318,"mtime":1620444037521,"results":"48","hashOfConfig":"40"},{"size":2754,"mtime":1622222380749,"results":"49","hashOfConfig":"40"},{"size":1515,"mtime":1622211607189,"results":"50","hashOfConfig":"40"},{"size":1332,"mtime":1622215777439,"results":"51","hashOfConfig":"40"},{"size":4470,"mtime":1621775396200,"results":"52","hashOfConfig":"40"},{"size":587,"mtime":1622214508999,"results":"53","hashOfConfig":"40"},{"size":5446,"mtime":1622222353635,"results":"54","hashOfConfig":"40"},{"size":635,"mtime":1622222353627,"results":"55","hashOfConfig":"40"},{"size":801,"mtime":1621744687613,"results":"56","hashOfConfig":"40"},{"size":446,"mtime":1619311762374,"results":"57","hashOfConfig":"40"},{"size":925,"mtime":1616585566122,"results":"58","hashOfConfig":"40"},{"size":2596,"mtime":1622216431369,"results":"59","hashOfConfig":"40"},{"size":670,"mtime":1619310972851,"results":"60","hashOfConfig":"40"},{"size":847,"mtime":1621426273683,"results":"61","hashOfConfig":"40"},{"size":1498,"mtime":1621748183825,"results":"62","hashOfConfig":"40"},{"size":568,"mtime":1621259479303,"results":"63","hashOfConfig":"40"},{"size":5561,"mtime":1622211607179,"results":"64","hashOfConfig":"40"},{"size":2022,"mtime":1621730096830,"results":"65","hashOfConfig":"40"},{"size":874,"mtime":1615848233170,"results":"66","hashOfConfig":"40"},{"size":2141,"mtime":1621779327778,"results":"67","hashOfConfig":"40"},{"size":1004,"mtime":1616068343611,"results":"68","hashOfConfig":"40"},{"size":5284,"mtime":1621053334897,"results":"69","hashOfConfig":"40"},{"size":649,"mtime":1622222267359,"results":"70","hashOfConfig":"40"},{"size":1589,"mtime":1622215732245,"results":"71","hashOfConfig":"40"},{"size":299,"mtime":1615848233189,"results":"72","hashOfConfig":"40"},{"size":1381,"mtime":1620807224630,"results":"73","hashOfConfig":"40"},{"size":2704,"mtime":1619410244859,"results":"74","hashOfConfig":"40"},{"size":1654,"mtime":1617186136193,"results":"75","hashOfConfig":"40"},{"size":608,"mtime":1622222353629,"results":"76","hashOfConfig":"40"},{"size":1472,"mtime":1622222353632,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hotvvd",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\index.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\reportWebVitals.js",[],["161","162"],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\language.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\loginStep.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\user.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\write.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\App.jsx",["163","164","165","166","167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Main from \"./page/main/main\";\r\nimport PostRegister from \"./page/postRegister/postRegister\";\r\nimport Setting from \"./page/setting/setting\";\r\nimport GithubLogin from \"./page/auth/githubLogin\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserByRefreshToken, clearUser } from \"./store/user\";\r\n\r\n/* \r\n\r\nApp component \r\n\r\n로그인한 User 정보가 있으면 user 정보를 set 하고\r\n적절한 component로 routing을 진행합니다.\r\n\r\nto-do\r\n-> localStorage에 user를 저장하자!!\r\n-> access token은 날아가는데 refresh token은 왜 남아있지? 둘다 header에 저장 아닌가?\r\n-> 새 글쓰기 같은 버튼에서 access token 여부를 check할 수 있나?\r\n-> 결론적으로는 ssr을 적용해야하나?\r\n-> 생각하는 방법은 index.js에서 fetchUserByRefreshToken씀\r\n-> 성공시 user, localStorage set. \r\n-> 실패시 user초기화, localStorage 초기화?\r\n-> fetchByRefreshToken의 정확한 용도를 알아야될듯..!\r\n-> access token 없을때 계속 써야할텐데, user 있으면 그냥 setting 하면 되지않나?\r\n*/\r\n\r\nconst App = () => {\r\n  console.log(\"App!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/main\"]}>\r\n          <Main />\r\n        </Route>\r\n      </Switch>\r\n      <Route path=\"/register\">\r\n        <PostRegister />\r\n      </Route>\r\n      <Route path=\"/setting\">\r\n        <Setting />\r\n      </Route>\r\n      <Route path=\"/auth/github\">\r\n        <GithubLogin />\r\n      </Route>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\auth_service.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\http_client.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\study_service.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\user_service.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\auth\\githubLogin.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\main\\main.jsx",["169","170","171"],"import styles from \"./main.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport StudyList from \"../../component/study_list/studyList\";\r\nimport Navbar from \"../../component/nav_bar/navbar\";\r\nimport Banner from \"../../component/banner/banner\";\r\nimport React from \"react\";\r\nimport LanguageBarList from \"../../component/language_bar_list/languageBarList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport studyService from \"../../service/study_service\";\r\nimport { fetchUserByRefreshToken, clearUser } from \"../../store/user\";\r\n\r\n/* \r\n\r\nmain page의 layout을 담당하는 component입니다. \r\ncomponent rendering시 useEffect를 통해 render할 post list를 받아옵니다.\r\n\r\nTo-Do\r\ncategory component 분리\r\n\r\n*/\r\n\r\nconst SORT_BY_VIEWS = \"+views\";\r\nconst SORT_BY_DATE = \"-createdAt\";\r\nconst SHOW_BY_VIEWS = \"trending\";\r\nconst SHOW_BY_DATE = \"recent\";\r\nconst ACTIVE = styles.active;\r\nconst INACTIVE = styles.inactive;\r\n\r\nconst Main = (props) => {\r\n  console.log(\"MAIN START!!!\");\r\n  const [popularStudyList, setPopularStudyList] = useState([]);\r\n  const [recentStudyList, setRecentStudyList] = useState([]);\r\n  const [category, setCategory] = useState(SHOW_BY_DATE);\r\n  const [styleDate, setStyleDate] = useState(ACTIVE);\r\n  const [styleRecent, setStyleRecent] = useState(INACTIVE);\r\n  const selectedLanguages = useSelector((state) => state.language);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Main UseEffect!!!!!!!!!!!!!!!!!!\");\r\n    studyService //\r\n      .getList(SORT_BY_DATE, selectedLanguages)\r\n      .then((response) => {\r\n        console.log(\"study list api 1 완료\");\r\n        setRecentStudyList(response.data);\r\n      })\r\n      .catch(console.error);\r\n\r\n    studyService //\r\n      .getList(SORT_BY_VIEWS, selectedLanguages)\r\n      .then((response) => {\r\n        console.log(\"study list api 2 완료\");\r\n        setPopularStudyList(response.data);\r\n      })\r\n      .catch(console.error);\r\n  }, [selectedLanguages]);\r\n\r\n  const toggleCategory = (e) => {\r\n    console.log(e);\r\n    if (category === SHOW_BY_DATE) {\r\n      setCategory((state) => SHOW_BY_VIEWS);\r\n      setStyleDate((state) => INACTIVE);\r\n      setStyleRecent((state) => ACTIVE);\r\n    } else {\r\n      setCategory((state) => SHOW_BY_DATE);\r\n      setStyleDate((state) => ACTIVE);\r\n      setStyleRecent((state) => INACTIVE);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar></Navbar>\r\n      <Banner />\r\n      <div className={styles.languageBarWrapper}>\r\n        <LanguageBarList />\r\n      </div>\r\n      <div className={styles.appWrapper}>\r\n        <div className={styles.app}>\r\n          <main className={styles.main}>\r\n            <section className={styles.category}>\r\n              <div\r\n                className={`${styles.category__item} ${styleDate}`}\r\n                onClick={toggleCategory}\r\n              >\r\n                <svg\r\n                  stroke=\"currentColor\"\r\n                  fill=\"currentColor\"\r\n                  strokeWidth=\"0\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  height=\"1em\"\r\n                  width=\"1em\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z\"></path>\r\n                </svg>\r\n                <span className={styles.text}>최신</span>\r\n              </div>\r\n              <div\r\n                className={`${styles.category__item} ${styleRecent}`}\r\n                onClick={toggleCategory}\r\n              >\r\n                <svg\r\n                  stroke=\"currentColor\"\r\n                  fill=\"currentColor\"\r\n                  strokeWidth=\"0\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  height=\"1em\"\r\n                  width=\"1em\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"></path>\r\n                </svg>\r\n\r\n                <span className={styles.text}>트렌딩</span>\r\n              </div>\r\n            </section>\r\n            {category === SHOW_BY_DATE ? (\r\n              <StudyList studyList={popularStudyList}></StudyList>\r\n            ) : (\r\n              <StudyList studyList={recentStudyList}></StudyList>\r\n            )}\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Main;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\postRegister\\postRegister.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\setting\\setting.jsx",["172","173","174","175","176","177"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from 'react-toastify';\r\n\r\nimport styles from \"./setting.module.css\";\r\nimport Navbar from \"../../component/nav_bar/navbar\";\r\nimport languageList from '../../languageList';\r\nimport userService from \"../../service/user_service\";\r\nimport studyService from \"../../service/study_service\";\r\nimport { clearUser } from \"../../store/user\";\r\nimport { nextStep } from \"../../store/loginStep\";\r\nimport { modifyUserInfo } from \"../../store/user\";\r\nimport { getFormatedToday } from \"../../common/utils\";\r\nimport LikeLanguages from \"../../component/like_languages/likeLanguages\";\r\nimport UserImageUpload from \"../../component/user_image_upload/userImageUpload\";\r\n/*\r\n// TODO\r\n이미지 컴포넌트로 분리\r\ns3 경로 config 파일로 분리\r\n\r\ngetPresignedUrl과 사용하는 filename 맞춰야함(분 달라지면 파일 못찾음)\r\n\r\n\r\n*/\r\nconst Setting = (props) => {\r\n  const [id, setID] = useState('');\r\n  const [nickName, setNickName] = useState('');\r\n  const [preNickName, setPreNickName] = useState('');\r\n  const [likeLanguages, setLikeLanguages] = useState([]);\r\n  const [image, setImage] = useState(null);\r\n  const [isImageChanged, setIsImageChanged] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  // 사용자 정보 세팅\r\n  useEffect(() => {\r\n    if(user.nickName) {\r\n      userService\r\n      .getUserInfoByNickName(user.nickName)\r\n      .then((response) => {\r\n        const userInfo = response.data;\r\n        if(userInfo.likeLanguages.length > 0) {\r\n          setLikeLanguages(userInfo.likeLanguages.map((obj) => {\r\n            let rObj = {};\r\n            rObj.value = obj;\r\n            rObj.label = languageList.find((element) => {\r\n            if(element.value === obj)\r\n              return true;\r\n            }).label;\r\n            return rObj;\r\n          }));\r\n        }\r\n        setID(userInfo._id);\r\n        setNickName(userInfo.nickName);\r\n        setPreNickName(userInfo.nickName);\r\n        if(userInfo.image) {\r\n          setImage(userInfo.image);\r\n        }\r\n      })\r\n      .catch(console.error);\r\n    }\r\n  },[]);\r\n\r\n  // 변경 완료 버튼\r\n  const onCompleteClick = async (e) => {\r\n    if(!nickName) {\r\n      toast.error('닉네임을 입력해야 합니다.', {\r\n        position: \"top-right\",\r\n        autoClose: 3000\r\n      });\r\n    }\r\n    else {\r\n      let languages = [];\r\n      if(likeLanguages.length > 0) {\r\n        likeLanguages.forEach(element => {\r\n          languages.push(element.value);\r\n        });\r\n      }\r\n\r\n      let payload = {\r\n          id: id,\r\n          likeLanguages: languages\r\n      };\r\n\r\n      if(nickName !== preNickName) {\r\n        payload.nickName = nickName;\r\n      }\r\n\r\n      if(isImageChanged) {\r\n        if(image) {\r\n          const preSignedUrl = await studyService.getPresignedUrl(nickName);\r\n          const fileName = `${nickName}_${getFormatedToday()}.png`;\r\n\r\n          await studyService\r\n          .uploadImageToS3WithBase64(preSignedUrl, image, fileName)\r\n          .then((response) => {\r\n            payload.image = fileName;\r\n          });\r\n        }\r\n        else {\r\n          payload.image = '';\r\n        }\r\n      }\r\n      await dispatch(modifyUserInfo(payload)).then(\r\n        (response) => {\r\n          if(response.payload) {\r\n            toast.success('변경이 완료되었습니다.', {\r\n              position: \"top-right\",\r\n              autoClose: 3000\r\n            });\r\n            history.push('/');\r\n          }\r\n          else {\r\n            toast.error('닉네임이 중복되었습니다.', {\r\n              position: \"top-right\",\r\n              autoClose: 3000\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  // 회원 탈퇴\r\n  const onSignOutClick = async (e) => {\r\n    userService.deleteUser(id).then((deleteSuccess) => {\r\n      localStorage.removeItem(\"userName\");\r\n      dispatch(clearUser());\r\n      dispatch(nextStep(\"LOGIN\"));\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n    return (\r\n    <>\r\n        <Navbar></Navbar>\r\n        <div className={styles.main}>\r\n          <h1>내 정보 수정</h1>\r\n          <UserImageUpload image={image} setImage={setImage} setIsImageChanged={setIsImageChanged}></UserImageUpload>\r\n          <div className={styles.titleWrapper}>\r\n              <h3>닉네임</h3>\r\n              <input type=\"text\" name=\"nickNameInput\" value={nickName} onChange={(e) => {setNickName(e.target.value)}}/>\r\n          </div>\r\n          <p className={styles.description}>\r\n              Hola에서 사용되는 이름입니다.\r\n          </p>\r\n          <hr />\r\n          <div className={styles.titleWrapper}>\r\n              <h3>\r\n              관심 기술 태그\r\n              </h3>\r\n              <LikeLanguages likeLanguages={likeLanguages} setLikeLanguages={setLikeLanguages}></LikeLanguages>\r\n          </div>\r\n          <p className={styles.description}>\r\n              관심 있는 기술 태그를 등록해주세요.\r\n          </p>\r\n          <hr />\r\n          <button onClick={onCompleteClick} className={styles.buttonComplete} name=\"complete\">완료</button>\r\n          <button onClick={onSignOutClick} className={styles.buttonSignOut} name=\"signOut\">회원탈퇴</button>\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Setting;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\common\\utils.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\languageList.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\study_list\\studyList.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\banner\\banner.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\nav_bar\\navbar.jsx",["178","179","180"],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\language_bar_list\\languageBarList.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\editor\\editorContainer.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\writeButton\\writebuttonContainer.jsx",["181","182"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { writePost } from \"../../store/write\";\r\nimport Writebutton from \"./writebutton\";\r\n\r\n/* \r\n\r\nWritebutton을 감싸고 있는 component입니다.\r\n\r\npost 등록이 성공하면 main page로 이동하고,\r\n실패하면 error를 보여줍니다.\r\n\r\nTo-do\r\n-> modal 보여지도록 글 id return 받기\r\n-> 실패했을때 에러 띄워주기\r\n\r\n*/\r\nconst WritebuttonContainer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { title, content, language, post, postError } = useSelector(\r\n    ({ write }) => ({\r\n      title: write.title,\r\n      content: write.content,\r\n      language: write.language,\r\n      post: write.post,\r\n      postError: write.postError,\r\n    })\r\n  );\r\n\r\n  // language 자동으로 넘어가도록 수정\r\n  const onPublish = () => {\r\n    dispatch(\r\n      writePost({ title, content, language: [\"Typescript\", \"typescript\"] })\r\n    ).then((response) => {\r\n      console.log(\"response is \", response);\r\n    });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    if (postError) {\r\n      console.log(post.Error);\r\n    }\r\n  }, [history, post, postError]);\r\n\r\n  return <Writebutton onPublish={onPublish} onCancel={onCancel}></Writebutton>;\r\n};\r\n\r\nexport default WritebuttonContainer;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\writeButton\\writebutton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\editor\\editor.jsx",["183","184"],"import React, { useRef, useEffect, useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport studyService from \"../../service/study_service\";\r\nimport Quill from \"quill\";\r\nimport styles from \"./editor.module.css\";\r\nimport QuillImageDropAndPaste from \"quill-image-drop-and-paste\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getFormatedToday } from \"../../common/utils\";\r\n\r\n/* \r\n\r\nQuill을 이용한 editor component 입니다.\r\nredux로 editor 상태를 관리하고,\r\nuser가 image upload시 s3 bucket으로 바로 upload 합니다.\r\n\r\nTo-do\r\nstyled-component 제거 \r\n-> quill 내부 style sheet 적용하려면 css file을 import 해야해서 일단 보류\r\n\r\npng 파일 외에 gif나 jpeg도 test\r\nimage minify 적용할건지 결정 필요\r\nimage upload시 파일 크기 작은거 확인 필요\r\ninput 관리 redux 적용\r\n\r\n*/\r\n\r\nconst QuillWrapper = styled.div`\r\n  /* 최소 크기 지정 및 padding 제거 */\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 480px;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ title, content, onChangeField }) => {\r\n  const quillElement = useRef(\"\"); // Quill을 적용할 DivElement를 설정\r\n  const quillInstance = useRef(\"\"); // Quill 인스턴스를 설정\r\n  const user = useSelector((state) => state.user);\r\n  const [image, setImage] = useState();\r\n\r\n  /* image Handler 함수 */\r\n  const imageHandler = useCallback(async (dataUrl, type, imageData) => {\r\n    imageData\r\n      .minify({\r\n        maxWidth: 320,\r\n        maxHeight: 320,\r\n        quality: 0.7,\r\n      })\r\n      .then((miniImageData) => {\r\n        const fileName = `${user.nickName}_${getFormatedToday()}.png`;\r\n        const file = miniImageData.toFile(fileName);\r\n        console.log(`type: ${type}`);\r\n        console.log(`file: ${file}`);\r\n        setImage((state) => file);\r\n      });\r\n\r\n    const quill = quillInstance.current;\r\n    const preSignedUrl = await studyService.getPresignedUrl(user.nickName);\r\n    const fileName = `${user.nickName}_${getFormatedToday()}.png`;\r\n    const imageFile = imageData.toFile(fileName);\r\n\r\n    /* bucket image upload */\r\n    await studyService\r\n      .uploadImageToS3(preSignedUrl, imageFile)\r\n      .then((response) => {\r\n        const imageUrl = `https://hola-post-image.s3.ap-northeast-2.amazonaws.com/${fileName}`;\r\n        let index = (quill.getSelection() || {}).index;\r\n        if (index === undefined || index < 0) index = quill.getLength();\r\n        quill.insertEmbed(index, \"image\", imageUrl, \"user\");\r\n        quill.setSelection(quill.getSelection().index + 1, 0); // image upload 후 cursor 이동\r\n      });\r\n  }, []);\r\n\r\n  /* default quill editor 설정 */\r\n  useEffect(() => {\r\n    Quill.register(\"modules/imageDropAndPaste\", QuillImageDropAndPaste);\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      modules: {\r\n        toolbar: [\r\n          [{ header: \"1\" }, { header: \"2\" }],\r\n          [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n          [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n          [\"blockquote\", \"code-block\", \"link\", \"image\"],\r\n        ],\r\n        imageDropAndPaste: {\r\n          handler: imageHandler,\r\n        },\r\n      },\r\n      placeholder: \"내용을 입력하세요...\",\r\n      readOnly: false,\r\n      theme: \"snow\",\r\n    });\r\n\r\n    /* 기본 image upload button에 대해서도 같은 handler 적용 */\r\n    const ImageData = QuillImageDropAndPaste.ImageData;\r\n    quillInstance.current\r\n      .getModule(\"toolbar\")\r\n      .addHandler(\"image\", (clicked) => {\r\n        if (clicked) {\r\n          let fileInput = quillInstance.current.container.querySelector(\r\n            \"input.ql-image[type=file]\"\r\n          );\r\n          if (fileInput == null) {\r\n            fileInput = document.createElement(\"input\");\r\n            fileInput.setAttribute(\"type\", \"file\");\r\n            fileInput.setAttribute(\r\n              \"accept\",\r\n              \"image/png, image/gif, image/jpeg, image/bmp, image/x-icon\"\r\n            );\r\n            fileInput.classList.add(\"ql-image\");\r\n            fileInput.addEventListener(\"change\", (e) => {\r\n              let files = e.target.files,\r\n                file;\r\n              if (files.length > 0) {\r\n                file = files[0];\r\n                let type = file.type;\r\n                let reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                  // handle the inserted image\r\n                  let dataUrl = e.target.result;\r\n                  imageHandler(dataUrl, type, new ImageData(dataUrl, type));\r\n                  fileInput.value = \"\";\r\n                };\r\n                reader.readAsDataURL(file);\r\n              }\r\n            });\r\n          }\r\n          fileInput.click();\r\n        }\r\n      });\r\n\r\n    const quill = quillInstance.current;\r\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\r\n      if (source === \"user\") {\r\n        onChangeField({ key: \"content\", value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField, imageHandler]);\r\n\r\n  const onChangeTitle = (e) => {\r\n    onChangeField({ key: \"title\", value: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.editorWrapper}>\r\n      <input\r\n        className={styles.titleInput}\r\n        type=\"text\"\r\n        placeholder=\"제목을 입력하세요\"\r\n        onChange={onChangeTitle}\r\n        value={title}\r\n      />\r\n\r\n      <QuillWrapper>\r\n        <div className={styles.quillEditor} ref={quillElement} />\r\n      </QuillWrapper>\r\n    </section>\r\n  );\r\n};\r\nexport default Editor;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\study_item\\studyItem.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\language_bar_item\\languageBarItem.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_user\\loginUser.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\modal_component\\modal.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\login_modal\\loginModal.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\post_modal\\postModal.jsx",["185","186"],"import React from \"react\";\r\nimport styles from \"./postModal.module.css\";\r\n\r\nconst PostModal = ({ study, handleClose }) => {\r\n  console.log(\"hihihihihihi Im modal\");\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.content}>스터디 합시다!</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostModal;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\dropdown_bar\\dropdownBar.jsx",["187"],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\portal\\portal.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\google_button\\googleButton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\github_button\\githubButton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\kakao_button\\kakaoButton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\like_languages\\likeLanguages.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\user_image_upload\\userImageUpload.jsx",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"196","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"197","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":21},{"ruleId":"192","severity":1,"message":"198","line":7,"column":23,"nodeType":"194","messageId":"195","endLine":7,"endColumn":34},{"ruleId":"192","severity":1,"message":"199","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":33},{"ruleId":"192","severity":1,"message":"200","line":8,"column":35,"nodeType":"194","messageId":"195","endLine":8,"endColumn":44},{"ruleId":"192","severity":1,"message":"197","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":21},{"ruleId":"192","severity":1,"message":"199","line":10,"column":10,"nodeType":"194","messageId":"195","endLine":10,"endColumn":33},{"ruleId":"192","severity":1,"message":"200","line":10,"column":35,"nodeType":"194","messageId":"195","endLine":10,"endColumn":44},{"ruleId":"192","severity":1,"message":"201","line":15,"column":28,"nodeType":"194","messageId":"195","endLine":15,"endColumn":45},{"ruleId":"202","severity":1,"message":"203","line":59,"column":58,"nodeType":"204","messageId":"205","endLine":59,"endColumn":60},{"ruleId":"206","severity":1,"message":"207","line":60,"column":37,"nodeType":"208","messageId":"209","endLine":60,"endColumn":39},{"ruleId":"210","severity":1,"message":"211","line":77,"column":6,"nodeType":"212","endLine":77,"endColumn":8,"suggestions":"213"},{"ruleId":"206","severity":1,"message":"214","line":99,"column":20,"nodeType":"208","messageId":"209","endLine":99,"endColumn":22},{"ruleId":"192","severity":1,"message":"215","line":121,"column":21,"nodeType":"194","messageId":"195","endLine":121,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"200","line":9,"column":10,"nodeType":"194","messageId":"195","endLine":9,"endColumn":19},{"ruleId":"192","severity":1,"message":"216","line":9,"column":46,"nodeType":"194","messageId":"195","endLine":9,"endColumn":53},{"ruleId":"192","severity":1,"message":"217","line":3,"column":22,"nodeType":"194","messageId":"195","endLine":3,"endColumn":33},{"ruleId":"192","severity":1,"message":"218","line":22,"column":27,"nodeType":"194","messageId":"195","endLine":22,"endColumn":35},{"ruleId":"192","severity":1,"message":"219","line":45,"column":10,"nodeType":"194","messageId":"195","endLine":45,"endColumn":15},{"ruleId":"210","severity":1,"message":"220","line":78,"column":6,"nodeType":"212","endLine":78,"endColumn":8,"suggestions":"221"},{"ruleId":"192","severity":1,"message":"222","line":8,"column":11,"nodeType":"194","messageId":"195","endLine":8,"endColumn":14},{"ruleId":"210","severity":1,"message":"223","line":12,"column":6,"nodeType":"212","endLine":12,"endColumn":8,"suggestions":"224"},{"ruleId":"192","severity":1,"message":"217","line":4,"column":16,"nodeType":"194","messageId":"195","endLine":4,"endColumn":27},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'fetchUserByRefreshToken' is defined but never used.","'clearUser' is defined but never used.","'getFileExtensions' is defined but never used.","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userNickName'. Either include it or remove the dependency array.","ArrayExpression",["227"],"Expected '!==' and instead saw '!='.","'imageUrl' is assigned a value but never used.","'setUser' is defined but never used.","'useLocation' is defined but never used.","'language' is assigned a value but never used.","'image' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'user.nickName'. Either include it or remove the dependency array.",["228"],"'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'study._id'. Either include it or remove the dependency array.",["229"],"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [userNickName]",{"range":"236","text":"237"},"Update the dependencies array to be: [user.nickName]",{"range":"238","text":"239"},"Update the dependencies array to be: [study._id]",{"range":"240","text":"241"},[2562,2564],"[userNickName]",[2551,2553],"[user.nickName]",[475,477],"[study._id]"]