[{"/Users/tmkim/Desktop/hola/client/src/index.js":"1","/Users/tmkim/Desktop/hola/client/src/reportWebVitals.js":"2","/Users/tmkim/Desktop/hola/client/src/store/user.js":"3","/Users/tmkim/Desktop/hola/client/src/store/language.js":"4","/Users/tmkim/Desktop/hola/client/src/store/write.js":"5","/Users/tmkim/Desktop/hola/client/src/store/loginStep.js":"6","/Users/tmkim/Desktop/hola/client/src/App.jsx":"7","/Users/tmkim/Desktop/hola/client/src/service/study_service.js":"8","/Users/tmkim/Desktop/hola/client/src/service/user_service.js":"9","/Users/tmkim/Desktop/hola/client/src/service/http_client.js":"10","/Users/tmkim/Desktop/hola/client/src/service/auth_service.js":"11","/Users/tmkim/Desktop/hola/client/src/page/postRegister/postRegister.jsx":"12","/Users/tmkim/Desktop/hola/client/src/page/auth/githubLogin.jsx":"13","/Users/tmkim/Desktop/hola/client/src/page/main/main.jsx":"14","/Users/tmkim/Desktop/hola/client/src/page/setting/setting.jsx":"15","/Users/tmkim/Desktop/hola/client/src/common/utils.js":"16","/Users/tmkim/Desktop/hola/client/src/languageList.js":"17","/Users/tmkim/Desktop/hola/client/src/component/language_bar_list/languageBarList.jsx":"18","/Users/tmkim/Desktop/hola/client/src/component/study_list/studyList.jsx":"19","/Users/tmkim/Desktop/hola/client/src/component/nav_bar/navbar.jsx":"20","/Users/tmkim/Desktop/hola/client/src/component/writeButton/writebuttonContainer.jsx":"21","/Users/tmkim/Desktop/hola/client/src/component/editor/editorContainer.jsx":"22","/Users/tmkim/Desktop/hola/client/src/component/banner/banner.jsx":"23","/Users/tmkim/Desktop/hola/client/src/component/writeButton/writebutton.jsx":"24","/Users/tmkim/Desktop/hola/client/src/component/editor/editor.jsx":"25","/Users/tmkim/Desktop/hola/client/src/component/language_bar_item/languageBarItem.jsx":"26","/Users/tmkim/Desktop/hola/client/src/component/study_item/studyItem.jsx":"27","/Users/tmkim/Desktop/hola/client/src/component/login_user/loginUser.jsx":"28","/Users/tmkim/Desktop/hola/client/src/component/modal/login_modal/loginModal.jsx":"29","/Users/tmkim/Desktop/hola/client/src/component/modal/modal_component/modal.jsx":"30","/Users/tmkim/Desktop/hola/client/src/component/modal/post_modal/postModal.jsx":"31","/Users/tmkim/Desktop/hola/client/src/component/dropdown_bar/dropdownBar.jsx":"32","/Users/tmkim/Desktop/hola/client/src/component/modal/portal/portal.jsx":"33","/Users/tmkim/Desktop/hola/client/src/component/login_button/google_button/googleButton.jsx":"34","/Users/tmkim/Desktop/hola/client/src/component/login_button/github_button/githubButton.jsx":"35","/Users/tmkim/Desktop/hola/client/src/component/login_button/kakao_button/kakaoButton.jsx":"36"},{"size":1430,"mtime":1621743953342,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1613053910168,"results":"39","hashOfConfig":"38"},{"size":4465,"mtime":1621517032702,"results":"40","hashOfConfig":"38"},{"size":484,"mtime":1615907787598,"results":"41","hashOfConfig":"38"},{"size":1636,"mtime":1621505857699,"results":"42","hashOfConfig":"38"},{"size":628,"mtime":1620454025437,"results":"43","hashOfConfig":"38"},{"size":2291,"mtime":1621744773116,"results":"44","hashOfConfig":"38"},{"size":2015,"mtime":1621505857699,"results":"45","hashOfConfig":"38"},{"size":1109,"mtime":1621696114725,"results":"46","hashOfConfig":"38"},{"size":308,"mtime":1620454025436,"results":"47","hashOfConfig":"38"},{"size":1141,"mtime":1621058097519,"results":"48","hashOfConfig":"38"},{"size":469,"mtime":1621505857699,"results":"49","hashOfConfig":"38"},{"size":1346,"mtime":1620731832028,"results":"50","hashOfConfig":"38"},{"size":5232,"mtime":1621685212889,"results":"51","hashOfConfig":"38"},{"size":4528,"mtime":1621744852525,"results":"52","hashOfConfig":"38"},{"size":464,"mtime":1621058097517,"results":"53","hashOfConfig":"38"},{"size":780,"mtime":1621661381735,"results":"54","hashOfConfig":"38"},{"size":637,"mtime":1619955441567,"results":"55","hashOfConfig":"38"},{"size":432,"mtime":1619955441570,"results":"56","hashOfConfig":"38"},{"size":1649,"mtime":1621058097518,"results":"57","hashOfConfig":"38"},{"size":1440,"mtime":1621505857698,"results":"58","hashOfConfig":"38"},{"size":813,"mtime":1621505857698,"results":"59","hashOfConfig":"38"},{"size":892,"mtime":1616587553625,"results":"60","hashOfConfig":"38"},{"size":544,"mtime":1621346742999,"results":"61","hashOfConfig":"38"},{"size":5475,"mtime":1621505857697,"results":"62","hashOfConfig":"38"},{"size":843,"mtime":1615907787594,"results":"63","hashOfConfig":"38"},{"size":1892,"mtime":1619955441569,"results":"64","hashOfConfig":"38"},{"size":1980,"mtime":1621743851455,"results":"65","hashOfConfig":"38"},{"size":5109,"mtime":1621058097518,"results":"66","hashOfConfig":"38"},{"size":958,"mtime":1616108665194,"results":"67","hashOfConfig":"38"},{"size":241,"mtime":1615907787596,"results":"68","hashOfConfig":"38"},{"size":1613,"mtime":1621693611496,"results":"69","hashOfConfig":"38"},{"size":287,"mtime":1615907787596,"results":"70","hashOfConfig":"38"},{"size":1351,"mtime":1620823243181,"results":"71","hashOfConfig":"38"},{"size":2665,"mtime":1619955441568,"results":"72","hashOfConfig":"38"},{"size":1631,"mtime":1617255068212,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1y0xn7v",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/tmkim/Desktop/hola/client/src/index.js",[],["150","151"],"/Users/tmkim/Desktop/hola/client/src/reportWebVitals.js",[],"/Users/tmkim/Desktop/hola/client/src/store/user.js",[],"/Users/tmkim/Desktop/hola/client/src/store/language.js",[],"/Users/tmkim/Desktop/hola/client/src/store/write.js",[],"/Users/tmkim/Desktop/hola/client/src/store/loginStep.js",[],"/Users/tmkim/Desktop/hola/client/src/App.jsx",["152","153"],"/Users/tmkim/Desktop/hola/client/src/service/study_service.js",[],"/Users/tmkim/Desktop/hola/client/src/service/user_service.js",[],"/Users/tmkim/Desktop/hola/client/src/service/http_client.js",[],"/Users/tmkim/Desktop/hola/client/src/service/auth_service.js",[],"/Users/tmkim/Desktop/hola/client/src/page/postRegister/postRegister.jsx",[],"/Users/tmkim/Desktop/hola/client/src/page/auth/githubLogin.jsx",[],"/Users/tmkim/Desktop/hola/client/src/page/main/main.jsx",[],"/Users/tmkim/Desktop/hola/client/src/page/setting/setting.jsx",["154","155"],"/Users/tmkim/Desktop/hola/client/src/common/utils.js",[],"/Users/tmkim/Desktop/hola/client/src/languageList.js",[],"/Users/tmkim/Desktop/hola/client/src/component/language_bar_list/languageBarList.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/study_list/studyList.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/nav_bar/navbar.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/writeButton/writebuttonContainer.jsx",["156","157"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { writePost } from \"../../store/write\";\nimport Writebutton from \"./writebutton\";\n\n/* \n\nWritebutton을 감싸고 있는 component입니다.\n\npost 등록이 성공하면 main page로 이동하고,\n실패하면 error를 보여줍니다.\n\nTo-do\n-> modal 보여지도록 글 id return 받기\n-> 실패했을때 에러 띄워주기\n\n*/\nconst WritebuttonContainer = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { title, content, language, post, postError } = useSelector(\n    ({ write }) => ({\n      title: write.title,\n      content: write.content,\n      language: write.language,\n      post: write.post,\n      postError: write.postError,\n    })\n  );\n\n  // language 자동으로 넘어가도록 수정\n  const onPublish = () => {\n    dispatch(\n      writePost({ title, content, language: [\"Typescript\", \"typescript\"] })\n    ).then((response) => {\n      console.log(\"response is \", response);\n    });\n  };\n\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (post) {\n      history.push(\"/\");\n    }\n\n    if (postError) {\n      console.log(post.Error);\n    }\n  }, [history, post, postError]);\n\n  return <Writebutton onPublish={onPublish} onCancel={onCancel}></Writebutton>;\n};\n\nexport default WritebuttonContainer;\n","/Users/tmkim/Desktop/hola/client/src/component/editor/editorContainer.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/banner/banner.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/writeButton/writebutton.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/editor/editor.jsx",["158","159"],"import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport studyService from \"../../service/study_service\";\nimport Quill from \"quill\";\nimport styles from \"./editor.module.css\";\nimport QuillImageDropAndPaste from \"quill-image-drop-and-paste\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useSelector } from \"react-redux\";\nimport { getFormatedToday } from \"../../common/utils\";\n\n/* \n\nQuill을 이용한 editor component 입니다.\nredux로 editor 상태를 관리하고,\nuser가 image upload시 s3 bucket으로 바로 upload 합니다.\n\nTo-do\nstyled-component 제거 \n-> quill 내부 style sheet 적용하려면 css file을 import 해야해서 일단 보류\n\npng 파일 외에 gif나 jpeg도 test\nimage minify 적용할건지 결정 필요\nimage upload시 파일 크기 작은거 확인 필요\ninput 관리 redux 적용\n\n*/\n\nconst QuillWrapper = styled.div`\n  /* 최소 크기 지정 및 padding 제거 */\n  .ql-editor {\n    padding: 0;\n    min-height: 480px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor.ql-blank::before {\n    left: 0px;\n  }\n`;\n\nconst Editor = ({ title, content, onChangeField }) => {\n  const quillElement = useRef(\"\"); // Quill을 적용할 DivElement를 설정\n  const quillInstance = useRef(\"\"); // Quill 인스턴스를 설정\n  const user = useSelector((state) => state.user);\n  const [image, setImage] = useState();\n\n  /* image Handler 함수 */\n  const imageHandler = useCallback(async (dataUrl, type, imageData) => {\n    imageData\n      .minify({\n        maxWidth: 320,\n        maxHeight: 320,\n        quality: 0.7,\n      })\n      .then((miniImageData) => {\n        const fileName = `${user.nickName}_${getFormatedToday()}.png`;\n        const file = miniImageData.toFile(fileName);\n        console.log(`type: ${type}`);\n        console.log(`file: ${file}`);\n        setImage((state) => file);\n      });\n\n    const quill = quillInstance.current;\n    const preSignedUrl = await studyService.getPresignedUrl(user.nickName);\n    const fileName = `${user.nickName}_${getFormatedToday()}.png`;\n    const imageFile = imageData.toFile(fileName);\n\n    /* bucket image upload */\n    await studyService\n      .uploadImageToS3(preSignedUrl, imageFile)\n      .then((response) => {\n        const imageUrl = `https://hola-post-image.s3.ap-northeast-2.amazonaws.com/${fileName}`;\n        let index = (quill.getSelection() || {}).index;\n        if (index === undefined || index < 0) index = quill.getLength();\n        quill.insertEmbed(index, \"image\", imageUrl, \"user\");\n        quill.setSelection(quill.getSelection().index + 1, 0); // image upload 후 cursor 이동\n      });\n  }, []);\n\n  /* default quill editor 설정 */\n  useEffect(() => {\n    Quill.register(\"modules/imageDropAndPaste\", QuillImageDropAndPaste);\n    quillInstance.current = new Quill(quillElement.current, {\n      modules: {\n        toolbar: [\n          [{ header: \"1\" }, { header: \"2\" }],\n          [\"bold\", \"italic\", \"underline\", \"strike\"],\n          [{ list: \"ordered\" }, { list: \"bullet\" }],\n          [\"blockquote\", \"code-block\", \"link\", \"image\"],\n        ],\n        imageDropAndPaste: {\n          handler: imageHandler,\n        },\n      },\n      placeholder: \"내용을 입력하세요...\",\n      readOnly: false,\n      theme: \"snow\",\n    });\n\n    /* 기본 image upload button에 대해서도 같은 handler 적용 */\n    const ImageData = QuillImageDropAndPaste.ImageData;\n    quillInstance.current\n      .getModule(\"toolbar\")\n      .addHandler(\"image\", (clicked) => {\n        if (clicked) {\n          let fileInput = quillInstance.current.container.querySelector(\n            \"input.ql-image[type=file]\"\n          );\n          if (fileInput == null) {\n            fileInput = document.createElement(\"input\");\n            fileInput.setAttribute(\"type\", \"file\");\n            fileInput.setAttribute(\n              \"accept\",\n              \"image/png, image/gif, image/jpeg, image/bmp, image/x-icon\"\n            );\n            fileInput.classList.add(\"ql-image\");\n            fileInput.addEventListener(\"change\", (e) => {\n              let files = e.target.files,\n                file;\n              if (files.length > 0) {\n                file = files[0];\n                let type = file.type;\n                let reader = new FileReader();\n                reader.onload = (e) => {\n                  // handle the inserted image\n                  let dataUrl = e.target.result;\n                  imageHandler(dataUrl, type, new ImageData(dataUrl, type));\n                  fileInput.value = \"\";\n                };\n                reader.readAsDataURL(file);\n              }\n            });\n          }\n          fileInput.click();\n        }\n      });\n\n    const quill = quillInstance.current;\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\n      if (source === \"user\") {\n        onChangeField({ key: \"content\", value: quill.root.innerHTML });\n      }\n    });\n  }, [onChangeField, imageHandler]);\n\n  const onChangeTitle = (e) => {\n    onChangeField({ key: \"title\", value: e.target.value });\n  };\n\n  return (\n    <section className={styles.editorWrapper}>\n      <input\n        className={styles.titleInput}\n        type=\"text\"\n        placeholder=\"제목을 입력하세요\"\n        onChange={onChangeTitle}\n        value={title}\n      />\n\n      <QuillWrapper>\n        <div className={styles.quillEditor} ref={quillElement} />\n      </QuillWrapper>\n    </section>\n  );\n};\nexport default Editor;\n","/Users/tmkim/Desktop/hola/client/src/component/language_bar_item/languageBarItem.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/study_item/studyItem.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/login_user/loginUser.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/modal/login_modal/loginModal.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/modal/modal_component/modal.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/modal/post_modal/postModal.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/dropdown_bar/dropdownBar.jsx",["160"],"import React from \"react\";\nimport styles from \"./dropdownBar.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { clearUser } from \"../../store/user\";\nimport authService from \"../../service/auth_service\";\nimport { nextStep } from \"../../store/loginStep\";\n/* \n\nloginUser Component에서 DropDown bar button CLick시 rendering 되는 component로,\n닉네임, 작성 글, 찜한 글, 로그아웃으로 구성되어 있습니다.\n\n로그아웃의 경우 handleLogout을 통해 user를 초기화하는 과정을 진행하며\nAPI를 통해 refresh token을 초기화 합니다.\n\n*/\n\nconst DropdownBar = () => {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    authService.logout().then((response) => {\n      console.log(response);\n      localStorage.removeItem(\"userName\");\n      dispatch(clearUser());\n      dispatch(nextStep(\"LOGIN\"));\n    });\n  };\n  return (\n    <div className={styles.menuWrapper}>\n      <ul className={styles.menu}>\n        <li className={styles.userName}>{user.name} 개발자</li>\n        <li className={styles.menuItem}>\n          <Link to=\"/list\">내 작성글</Link>\n        </li>\n        <li className={styles.menuItem}>\n          <Link to=\"/list\">찜한 글</Link>\n        </li>\n        <li className={styles.menuItem}>\n          <Link to=\"/setting\">설정</Link>\n        </li>\n        <li className={styles.menuItem} onClick={handleLogout}>\n          로그아웃\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default DropdownBar;\n","/Users/tmkim/Desktop/hola/client/src/component/modal/portal/portal.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/login_button/google_button/googleButton.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/login_button/github_button/githubButton.jsx",[],"/Users/tmkim/Desktop/hola/client/src/component/login_button/kakao_button/kakaoButton.jsx",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"169","line":8,"column":10,"nodeType":"167","messageId":"168","endLine":8,"endColumn":33},{"ruleId":"165","severity":1,"message":"170","line":32,"column":21,"nodeType":"167","messageId":"168","endLine":32,"endColumn":33},{"ruleId":"171","severity":1,"message":"172","line":56,"column":5,"nodeType":"173","endLine":56,"endColumn":7,"suggestions":"174"},{"ruleId":"165","severity":1,"message":"175","line":3,"column":22,"nodeType":"167","messageId":"168","endLine":3,"endColumn":33},{"ruleId":"165","severity":1,"message":"176","line":22,"column":27,"nodeType":"167","messageId":"168","endLine":22,"endColumn":35},{"ruleId":"165","severity":1,"message":"177","line":45,"column":10,"nodeType":"167","messageId":"168","endLine":45,"endColumn":15},{"ruleId":"171","severity":1,"message":"178","line":78,"column":6,"nodeType":"173","endLine":78,"endColumn":8,"suggestions":"179"},{"ruleId":"165","severity":1,"message":"175","line":4,"column":16,"nodeType":"167","messageId":"168","endLine":4,"endColumn":27},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'fetchUserByRefreshToken' is defined but never used.","'setUserImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'useLocation' is defined but never used.","'language' is assigned a value but never used.","'image' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'user.nickName'. Either include it or remove the dependency array.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [userId]",{"range":"188","text":"189"},"Update the dependencies array to be: [user.nickName]",{"range":"190","text":"191"},[1619,1621],"[userId]",[2474,2476],"[user.nickName]"]