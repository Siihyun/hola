[{"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\index.js":"1","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\language.js":"3","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\loginStep.js":"4","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\user.js":"5","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\write.js":"6","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\App.jsx":"7","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\auth_service.js":"8","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\http_client.js":"9","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\study_service.js":"10","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\user_service.js":"11","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\auth\\githubLogin.jsx":"12","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\main\\main.jsx":"13","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\postRegister\\postRegister.jsx":"14","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\setting\\setting.jsx":"15","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\common\\utils.js":"16","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\languageList.js":"17","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\study_list\\studyList.jsx":"18","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\banner\\banner.jsx":"19","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\nav_bar\\navbar.jsx":"20","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\language_bar_list\\languageBarList.jsx":"21","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\editor\\editorContainer.jsx":"22","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\editor\\editor.jsx":"23","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\study_item\\studyItem.jsx":"24","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\language_bar_item\\languageBarItem.jsx":"25","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_user\\loginUser.jsx":"26","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\modal_component\\modal.jsx":"27","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\login_modal\\loginModal.jsx":"28","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\post_modal\\postModal.jsx":"29","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\dropdown_bar\\dropdownBar.jsx":"30","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\portal\\portal.jsx":"31","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\google_button\\googleButton.jsx":"32","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\github_button\\githubButton.jsx":"33","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\kakao_button\\kakaoButton.jsx":"34","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\like_languages\\likeLanguages.jsx":"35","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\user_image_upload\\userImageUpload.jsx":"36","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\read.js":"37","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\comment_container\\commentContainer.jsx":"38","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\comment_input\\commentInput.jsx":"39","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\comment_list\\commentList.jsx":"40","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\comment_item\\commentItem.jsx":"41","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\likes_and_views\\likesAndViews.jsx":"42","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\cancelButton\\cancelButton.jsx":"43","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\top_bar\\topBar.jsx":"44","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\social_login_container\\socialLoginContainer.jsx":"45","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\set_nickname_container\\setNicknameContainer.jsx":"46","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\write_button\\writebuttonContainer.jsx":"47","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\write_button\\writebutton.jsx":"48","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\set_nickname\\setNickname.jsx":"49","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\social_login\\socialLogin.jsx":"50","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\top_bar_container\\topBarContainer.jsx":"51"},{"size":2241,"mtime":1622622895281,"results":"52","hashOfConfig":"53"},{"size":375,"mtime":1615848233202,"results":"54","hashOfConfig":"53"},{"size":505,"mtime":1615848233207,"results":"55","hashOfConfig":"53"},{"size":1028,"mtime":1624626192560,"results":"56","hashOfConfig":"53"},{"size":4925,"mtime":1624626118923,"results":"57","hashOfConfig":"53"},{"size":3219,"mtime":1622807271519,"results":"58","hashOfConfig":"53"},{"size":1086,"mtime":1622592472882,"results":"59","hashOfConfig":"53"},{"size":1192,"mtime":1621053299397,"results":"60","hashOfConfig":"53"},{"size":318,"mtime":1620444037521,"results":"61","hashOfConfig":"53"},{"size":4630,"mtime":1624077839777,"results":"62","hashOfConfig":"53"},{"size":1515,"mtime":1622211607189,"results":"63","hashOfConfig":"53"},{"size":1332,"mtime":1622215777439,"results":"64","hashOfConfig":"53"},{"size":4625,"mtime":1622592612147,"results":"65","hashOfConfig":"53"},{"size":615,"mtime":1624548549310,"results":"66","hashOfConfig":"53"},{"size":5739,"mtime":1624084782568,"results":"67","hashOfConfig":"53"},{"size":937,"mtime":1624402281355,"results":"68","hashOfConfig":"53"},{"size":801,"mtime":1621744687613,"results":"69","hashOfConfig":"53"},{"size":446,"mtime":1619311762374,"results":"70","hashOfConfig":"53"},{"size":930,"mtime":1624547066427,"results":"71","hashOfConfig":"53"},{"size":2891,"mtime":1624629563502,"results":"72","hashOfConfig":"53"},{"size":670,"mtime":1619310972851,"results":"73","hashOfConfig":"53"},{"size":1092,"mtime":1622807301502,"results":"74","hashOfConfig":"53"},{"size":5683,"mtime":1623064892799,"results":"75","hashOfConfig":"53"},{"size":2109,"mtime":1624069923235,"results":"76","hashOfConfig":"53"},{"size":874,"mtime":1615848233170,"results":"77","hashOfConfig":"53"},{"size":1926,"mtime":1624083349215,"results":"78","hashOfConfig":"53"},{"size":1220,"mtime":1624631327444,"results":"79","hashOfConfig":"53"},{"size":5525,"mtime":1624629478247,"results":"80","hashOfConfig":"53"},{"size":4309,"mtime":1624280603259,"results":"81","hashOfConfig":"53"},{"size":1712,"mtime":1624546681050,"results":"82","hashOfConfig":"53"},{"size":299,"mtime":1615848233189,"results":"83","hashOfConfig":"53"},{"size":1381,"mtime":1620807224630,"results":"84","hashOfConfig":"53"},{"size":2704,"mtime":1619410244859,"results":"85","hashOfConfig":"53"},{"size":1654,"mtime":1617186136193,"results":"86","hashOfConfig":"53"},{"size":609,"mtime":1623069797420,"results":"87","hashOfConfig":"53"},{"size":1687,"mtime":1624084436589,"results":"88","hashOfConfig":"53"},{"size":1582,"mtime":1622809299145,"results":"89","hashOfConfig":"53"},{"size":1272,"mtime":1622725741487,"results":"90","hashOfConfig":"53"},{"size":765,"mtime":1624071982918,"results":"91","hashOfConfig":"53"},{"size":459,"mtime":1622725741496,"results":"92","hashOfConfig":"53"},{"size":3940,"mtime":1623044008079,"results":"93","hashOfConfig":"53"},{"size":1544,"mtime":1624080237619,"results":"94","hashOfConfig":"53"},{"size":734,"mtime":1624282352123,"results":"95","hashOfConfig":"53"},{"size":407,"mtime":1624548055421,"results":"96","hashOfConfig":"53"},{"size":1731,"mtime":1624626485953,"results":"97","hashOfConfig":"53"},{"size":924,"mtime":1624626609159,"results":"98","hashOfConfig":"53"},{"size":2026,"mtime":1622806093177,"results":"99","hashOfConfig":"53"},{"size":568,"mtime":1621259479303,"results":"100","hashOfConfig":"53"},{"size":908,"mtime":1624548646416,"results":"101","hashOfConfig":"53"},{"size":1326,"mtime":1624626954278,"results":"102","hashOfConfig":"53"},{"size":407,"mtime":1624548620412,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1hotvvd",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\index.js",[],["217","218"],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\language.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\loginStep.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\user.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\write.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\App.jsx",["219","220","221","222","223","224"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Main from \"./page/main/main\";\r\nimport PostRegister from \"./page/postRegister/postRegister\";\r\nimport Setting from \"./page/setting/setting\";\r\nimport GithubLogin from \"./page/auth/githubLogin\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserByRefreshToken, clearUser } from \"./store/user\";\r\n\r\n/* \r\n\r\nApp component \r\n\r\n로그인한 User 정보가 있으면 user 정보를 set 하고\r\n적절한 component로 routing을 진행합니다.\r\n\r\n*/\r\n\r\nconst App = () => {\r\n  console.log(\"App!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/main\"]}>\r\n          <Main />\r\n        </Route>\r\n      </Switch>\r\n      <Route path=\"/register\">\r\n        <PostRegister />\r\n      </Route>\r\n      <Route path=\"/setting\">\r\n        <Setting />\r\n      </Route>\r\n      <Route path=\"/auth/github\">\r\n        <GithubLogin />\r\n      </Route>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\auth_service.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\http_client.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\study_service.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\service\\user_service.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\auth\\githubLogin.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\main\\main.jsx",["225","226","227"],"import styles from \"./main.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport StudyList from \"../../component/study_list/studyList\";\r\nimport Navbar from \"../../component/nav_bar/navbar\";\r\nimport Banner from \"../../component/banner/banner\";\r\nimport React from \"react\";\r\nimport LanguageBarList from \"../../component/language_bar_list/languageBarList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport studyService from \"../../service/study_service\";\r\nimport { fetchUserByRefreshToken, clearUser } from \"../../store/user\";\r\n\r\n/* \r\n\r\nmain page의 layout을 담당하는 component입니다. \r\ncomponent rendering시 useEffect를 통해 render할 post list를 받아옵니다.\r\n\r\n최신, 트렌딩 두가지의 기준으로 분리하였습니다.\r\n\r\nTo-Do\r\ncategory component 분리\r\n\r\n*/\r\n\r\nconst SORT_BY_VIEWS = \"+views\";\r\nconst SORT_BY_DATE = \"-createdAt\";\r\nconst SHOW_BY_VIEWS = \"trending\";\r\nconst SHOW_BY_DATE = \"recent\";\r\nconst ACTIVE = styles.active;\r\nconst INACTIVE = styles.inactive;\r\n\r\nconst Main = (props) => {\r\n  console.log(\"MAIN START!!\");\r\n  const [popularStudyList, setPopularStudyList] = useState([]);\r\n  const [recentStudyList, setRecentStudyList] = useState([]);\r\n  const [category, setCategory] = useState(SHOW_BY_DATE);\r\n  const [styleDate, setStyleDate] = useState(ACTIVE);\r\n  const [styleRecent, setStyleRecent] = useState(INACTIVE);\r\n  const selectedLanguages = useSelector((state) => state.language);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Main UseEffect!!\");\r\n    studyService //\r\n      .getList(SORT_BY_DATE, selectedLanguages)\r\n      .then((response) => {\r\n        console.log(\"study list api 1 완료\");\r\n        setRecentStudyList(response.data);\r\n      })\r\n      .catch(console.error);\r\n\r\n    studyService //\r\n      .getList(SORT_BY_VIEWS, selectedLanguages)\r\n      .then((response) => {\r\n        console.log(\"study list api 2 완료\");\r\n        setPopularStudyList(response.data);\r\n      })\r\n      .catch(console.error);\r\n  }, [selectedLanguages]);\r\n\r\n  const toggleCategoryToDate = (e) => {\r\n    if (category === SHOW_BY_DATE) return;\r\n    setCategory((state) => SHOW_BY_DATE);\r\n    setStyleDate((state) => ACTIVE);\r\n    setStyleRecent((state) => INACTIVE);\r\n  };\r\n\r\n  const toggleCategoryToView = (e) => {\r\n    console.log(e);\r\n    if (category === SHOW_BY_VIEWS) return;\r\n    setCategory((state) => SHOW_BY_VIEWS);\r\n    setStyleDate((state) => INACTIVE);\r\n    setStyleRecent((state) => ACTIVE);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar showRegisterButton={true} />\r\n      <Banner />\r\n      <div className={styles.languageBarWrapper}>\r\n        <LanguageBarList />\r\n      </div>\r\n      <div className={styles.appWrapper}>\r\n        <div className={styles.app}>\r\n          <main className={styles.main}>\r\n            <section className={styles.category}>\r\n              <div\r\n                className={`${styles.category__item} ${styleDate}`}\r\n                onClick={toggleCategoryToDate}\r\n              >\r\n                <svg\r\n                  stroke=\"currentColor\"\r\n                  fill=\"currentColor\"\r\n                  strokeWidth=\"0\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  height=\"1em\"\r\n                  width=\"1em\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z\"></path>\r\n                </svg>\r\n                <span className={styles.text}>최신</span>\r\n              </div>\r\n              <div\r\n                className={`${styles.category__item} ${styleRecent}`}\r\n                onClick={toggleCategoryToView}\r\n              >\r\n                <svg\r\n                  stroke=\"currentColor\"\r\n                  fill=\"currentColor\"\r\n                  strokeWidth=\"0\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  height=\"1em\"\r\n                  width=\"1em\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"></path>\r\n                </svg>\r\n                <span className={styles.text}>트렌딩</span>\r\n              </div>\r\n            </section>\r\n            {category === SHOW_BY_DATE ? (\r\n              <StudyList studyList={recentStudyList}></StudyList>\r\n            ) : (\r\n              <StudyList studyList={popularStudyList}></StudyList>\r\n            )}\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Main;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\postRegister\\postRegister.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\page\\setting\\setting.jsx",["228","229"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport styles from \"./setting.module.css\";\r\nimport Navbar from \"../../component/nav_bar/navbar\";\r\nimport languageList from \"../../languageList\";\r\nimport userService from \"../../service/user_service\";\r\nimport studyService from \"../../service/study_service\";\r\nimport { clearUser } from \"../../store/user\";\r\nimport { nextStep } from \"../../store/loginStep\";\r\nimport { modifyUserInfo } from \"../../store/user\";\r\nimport { getFormatedToday } from \"../../common/utils\";\r\nimport LikeLanguages from \"../../component/like_languages/likeLanguages\";\r\nimport UserImageUpload from \"../../component/user_image_upload/userImageUpload\";\r\n/*\r\n// TODO\r\n이미지 컴포넌트로 분리\r\ns3 경로 config 파일로 분리\r\n\r\ngetPresignedUrl과 사용하는 filename 맞춰야함(분 달라지면 파일 못찾음)\r\n\r\n\r\n*/\r\nconst Setting = (props) => {\r\n  const [id, setID] = useState(\"\");\r\n  const [nickName, setNickName] = useState(\"\");\r\n  const [preNickName, setPreNickName] = useState(\"\");\r\n  const [likeLanguages, setLikeLanguages] = useState([]);\r\n  const [image, setImage] = useState(null);\r\n  const [isImageChanged, setIsImageChanged] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  // 사용자 정보 세팅\r\n  useEffect(() => {\r\n    if (user.nickName) {\r\n      userService\r\n        .getUserInfoByNickName(user.nickName)\r\n        .then((response) => {\r\n          const userInfo = response.data;\r\n          if (userInfo.likeLanguages.length > 0) {\r\n            setLikeLanguages(\r\n              userInfo.likeLanguages.map((obj) => {\r\n                let rObj = {};\r\n                rObj.value = obj;\r\n                rObj.label = languageList.find((element) => {\r\n                  if (element.value === obj) return true;\r\n                }).label;\r\n                return rObj;\r\n              })\r\n            );\r\n          }\r\n          setID(userInfo._id);\r\n          setNickName(userInfo.nickName);\r\n          setPreNickName(userInfo.nickName);\r\n          if (userInfo.image) {\r\n            setImage(userInfo.image);\r\n          }\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  }, []);\r\n\r\n  // 변경 완료 버튼\r\n  const onCompleteClick = async (e) => {\r\n    if (!nickName) {\r\n      toast.error(\"닉네임을 입력해야 합니다.\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n      });\r\n    } else {\r\n      let languages = [];\r\n      if (likeLanguages.length > 0) {\r\n        likeLanguages.forEach((element) => {\r\n          languages.push(element.value);\r\n        });\r\n      }\r\n\r\n      let payload = {\r\n        id: id,\r\n        likeLanguages: languages,\r\n      };\r\n\r\n      if (nickName !== preNickName) {\r\n        payload.nickName = nickName;\r\n      }\r\n\r\n      if (isImageChanged) {\r\n        if (image) {\r\n          const preSignedUrl = await studyService.getPresignedUrl(nickName);\r\n          const fileName = `${nickName}_${getFormatedToday()}.png`;\r\n\r\n          await studyService\r\n            .uploadImageToS3WithBase64(preSignedUrl, image, fileName)\r\n            .then((response) => {\r\n              payload.image = fileName;\r\n            });\r\n        } else {\r\n          payload.image = \"\";\r\n        }\r\n      }\r\n      await dispatch(modifyUserInfo(payload)).then((response) => {\r\n        if (response.payload) {\r\n          toast.success(\"변경이 완료되었습니다.\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n          });\r\n          history.push(\"/\");\r\n        } else {\r\n          toast.error(\"닉네임이 중복되었습니다.\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // 회원 탈퇴\r\n  const onSignOutClick = async (e) => {\r\n    userService.deleteUser(id).then((deleteSuccess) => {\r\n      localStorage.removeItem(\"userName\");\r\n      dispatch(clearUser());\r\n      dispatch(nextStep(\"LOGIN\"));\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar showRegisterButton={true}></Navbar>\r\n      <div className={styles.main}>\r\n        <h1>내 정보 수정</h1>\r\n        <UserImageUpload\r\n          image={image}\r\n          setImage={setImage}\r\n          setIsImageChanged={setIsImageChanged}\r\n        ></UserImageUpload>\r\n        <div className={styles.titleWrapper}>\r\n          <h3>닉네임</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nickNameInput\"\r\n            value={nickName}\r\n            onChange={(e) => {\r\n              setNickName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <p className={styles.description}>Hola에서 사용되는 이름입니다.</p>\r\n        <hr />\r\n        <div className={styles.titleWrapper}>\r\n          <h3>관심 기술 태그</h3>\r\n          <LikeLanguages\r\n            likeLanguages={likeLanguages}\r\n            setLikeLanguages={setLikeLanguages}\r\n          ></LikeLanguages>\r\n        </div>\r\n        <p className={styles.description}>\r\n          관심 있는 기술 태그를 등록해주세요.\r\n        </p>\r\n        <hr />\r\n        <button\r\n          onClick={onCompleteClick}\r\n          className={`${styles.buttonComplete} ${styles.mainButton}`}\r\n          name=\"complete\"\r\n        >\r\n          완료\r\n        </button>\r\n        <button\r\n          onClick={onSignOutClick}\r\n          className={`${styles.buttonSignOut} ${styles.mainButton}`}\r\n          name=\"signOut\"\r\n        >\r\n          회원탈퇴\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\common\\utils.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\languageList.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\study_list\\studyList.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\banner\\banner.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\nav_bar\\navbar.jsx",["230","231"],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\language_bar_list\\languageBarList.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\editor\\editorContainer.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\editor\\editor.jsx",["232","233","234","235","236","237"],"import React, { useRef, useEffect, useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport studyService from \"../../service/study_service\";\r\nimport Quill from \"quill\";\r\nimport styles from \"./editor.module.css\";\r\nimport QuillImageDropAndPaste from \"quill-image-drop-and-paste\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getFormatedToday } from \"../../common/utils\";\r\nimport LikeLanguages from \"../like_languages/likeLanguages\";\r\n\r\n/* \r\n\r\nQuill을 이용한 editor component 입니다.\r\nredux로 editor 상태를 관리하고,\r\nuser가 image upload시 s3 bucket으로 바로 upload 합니다.\r\n\r\nTo-do\r\nstyled-component 제거 \r\n-> quill 내부 style sheet 적용하려면 css file을 import 해야해서 일단 보류\r\n\r\npng 파일 외에 gif나 jpeg도 test\r\nimage minify 적용할건지 결정 필요\r\nimage upload시 파일 크기 작은거 확인 필요\r\ninput 관리 redux 적용\r\n\r\n*/\r\n\r\nconst QuillWrapper = styled.div`\r\n  /* 최소 크기 지정 및 padding 제거 */\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 480px;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({\r\n  title,\r\n  content,\r\n  language,\r\n  onChangeField,\r\n  onChangeLanguage,\r\n}) => {\r\n  const quillElement = useRef(\"\"); // Quill을 적용할 DivElement를 설정\r\n  const quillInstance = useRef(\"\"); // Quill 인스턴스를 설정\r\n  const user = useSelector((state) => state.user);\r\n  const [image, setImage] = useState();\r\n  const [likeLanguages, setLikeLanguages] = useState([]);\r\n\r\n  /* image Handler 함수 */\r\n  const imageHandler = useCallback(async (dataUrl, type, imageData) => {\r\n    const quill = quillInstance.current;\r\n    const { preSignedUrl, fileName } = await studyService.getPresignedUrl(\r\n      user.nickName\r\n    );\r\n\r\n    const imageFile = imageData.toFile(fileName);\r\n\r\n    /* bucket image upload */\r\n    await studyService\r\n      .uploadImageToS3(preSignedUrl, imageFile)\r\n      .then((response) => {\r\n        const imageUrl = `https://hola-post-image.s3.ap-northeast-2.amazonaws.com/${fileName}`;\r\n        let index = (quill.getSelection() || {}).index;\r\n        if (index === undefined || index < 0) index = quill.getLength();\r\n        quill.insertEmbed(index, \"image\", imageUrl, \"user\");\r\n        quill.setSelection(quill.getSelection().index + 1, 0); // image upload 후 cursor 이동\r\n      });\r\n  }, []);\r\n\r\n  /* default quill editor 설정 */\r\n  useEffect(() => {\r\n    Quill.register(\"modules/imageDropAndPaste\", QuillImageDropAndPaste);\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      modules: {\r\n        toolbar: [\r\n          [{ header: \"1\" }, { header: \"2\" }],\r\n          [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n          [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n          [\"blockquote\", \"code-block\", \"link\", \"image\"],\r\n        ],\r\n        imageDropAndPaste: {\r\n          handler: imageHandler,\r\n        },\r\n      },\r\n      placeholder: \"내용을 입력하세요...\",\r\n      readOnly: false,\r\n      theme: \"snow\",\r\n    });\r\n\r\n    /* 기본 image upload button에 대해서도 같은 handler 적용 */\r\n    const ImageData = QuillImageDropAndPaste.ImageData;\r\n    quillInstance.current\r\n      .getModule(\"toolbar\")\r\n      .addHandler(\"image\", (clicked) => {\r\n        if (clicked) {\r\n          let fileInput = quillInstance.current.container.querySelector(\r\n            \"input.ql-image[type=file]\"\r\n          );\r\n          if (fileInput == null) {\r\n            fileInput = document.createElement(\"input\");\r\n            fileInput.setAttribute(\"type\", \"file\");\r\n            fileInput.setAttribute(\r\n              \"accept\",\r\n              \"image/png, image/gif, image/jpeg, image/bmp, image/x-icon\"\r\n            );\r\n            fileInput.classList.add(\"ql-image\");\r\n            fileInput.addEventListener(\"change\", (e) => {\r\n              let files = e.target.files,\r\n                file;\r\n              if (files.length > 0) {\r\n                file = files[0];\r\n                let type = file.type;\r\n                let reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                  // handle the inserted image\r\n                  let dataUrl = e.target.result;\r\n                  imageHandler(dataUrl, type, new ImageData(dataUrl, type));\r\n                  fileInput.value = \"\";\r\n                };\r\n                reader.readAsDataURL(file);\r\n              }\r\n            });\r\n          }\r\n          fileInput.click();\r\n        }\r\n      });\r\n\r\n    const quill = quillInstance.current;\r\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\r\n      if (source === \"user\") {\r\n        onChangeField({ key: \"content\", value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField, imageHandler]);\r\n\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = content;\r\n  }, [content]);\r\n\r\n  const onChangeTitle = (e) => {\r\n    onChangeField({ key: \"title\", value: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.editorWrapper}>\r\n      <input\r\n        className={styles.titleInput}\r\n        type=\"text\"\r\n        placeholder=\"제목을 입력하세요\"\r\n        onChange={onChangeTitle}\r\n        value={title}\r\n      />\r\n      <LikeLanguages\r\n        likeLanguages={language}\r\n        setLikeLanguages={onChangeLanguage}\r\n      ></LikeLanguages>\r\n      <QuillWrapper>\r\n        <div className={styles.quillEditor} ref={quillElement} />\r\n      </QuillWrapper>\r\n    </section>\r\n  );\r\n};\r\nexport default Editor;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\study_item\\studyItem.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\language_bar_item\\languageBarItem.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_user\\loginUser.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\modal_component\\modal.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\login_modal\\loginModal.jsx",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\post_modal\\postModal.jsx",["253","254"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport studyService from \"../../../service/study_service\";\r\nimport LikesAndViews from \"../../likes_and_views/likesAndViews\";\r\nimport styles from \"./postModal.module.css\";\r\nimport { readPost, clearPost } from \"../../../store/read\";\r\nimport { setPost } from \"../../../store/write\";\r\nimport CommentContainer from \"../../comment_container/commentContainer\";\r\nimport { useHistory } from \"react-router\";\r\nimport Modal from \"../modal_component/modal\";\r\nimport CancelButton from \"../../cancelButton/cancelButton\";\r\n\r\n/* \r\n\r\nPostModal Component\r\nStudy Click시 해당 내용을 보여주는 Component입니다.\r\nStudy 내용을 받아와서 useEffect를 통해 API 호출 후 rendering 합니다.\r\n\r\nTo-Do\r\n1. 로딩 바 구현\r\n2. min-height 어떻게 처리할지 구현\r\n\r\n*/\r\n\r\nconst handleEdit = (dispatch, history, post) => {\r\n  dispatch(setPost(post));\r\n  document.body.style.overflow = \"auto\";\r\n  history.push(\"/register\");\r\n};\r\n\r\nconst TestButton = ({ dispatch, history, post }) => {\r\n  const handleDelete = () => {\r\n    setShowPopup((state) => !state);\r\n  };\r\n\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  return (\r\n    <>\r\n      <section className={styles.buttonWrapper}>\r\n        <button onClick={() => handleEdit(dispatch, history, post)}>\r\n          수정\r\n        </button>\r\n        <button onClick={handleDelete}>삭제</button>\r\n      </section>\r\n      {showPopup && <CancelButton></CancelButton>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostModal = ({ study, handleClose }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.user);\r\n  const read = useSelector((state) => state.read);\r\n  console.log(\"postmodal rendering!!!\");\r\n  const defaultPath =\r\n    \"https://hola-post-image.s3.ap-northeast-2.amazonaws.com/\";\r\n  console.log(\"###studycontent : \", study);\r\n  useEffect(() => {\r\n    dispatch(readPost(study._id));\r\n    return () => {\r\n      dispatch(clearPost());\r\n    };\r\n  }, [dispatch, study._id]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <section className={styles.modalHeader}>\r\n        <img\r\n          className={styles.logo}\r\n          src=\"/images/logo/hola_logo_y.png\"\r\n          alt=\"welcome\"\r\n        ></img>\r\n        <div className={styles.exitWrapper} onClick={handleClose}>\r\n          <svg\r\n            stroke=\"currentColor\"\r\n            fill=\"currentColor\"\r\n            strokeWidth=\"0\"\r\n            viewBox=\"0 0 24 24\"\r\n            tabIndex=\"1\"\r\n            height=\"1em\"\r\n            width=\"1em\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n          </svg>\r\n        </div>\r\n      </section>\r\n      <section className={styles.modalContent}>\r\n        <div className={styles.postHeader}>\r\n          <div className={styles.registeredDate}>2021.05.24</div>\r\n          <div className={styles.title}>{study.title}</div>\r\n          <div className={styles.user}>\r\n            <img\r\n              className={styles.userImg}\r\n              src={defaultPath + read.post.imagePath}\r\n              alt=\"userImg\"\r\n            />\r\n            <div className={styles.userName}>{read.post.nickname}</div>\r\n          </div>\r\n          {user.nickName === read.post.nickname && (\r\n            <TestButton\r\n              dispatch={dispatch}\r\n              history={history}\r\n              post={read.post}\r\n            ></TestButton>\r\n          )}\r\n        </div>\r\n        <div className={styles.postContentWrapper}>\r\n          <div\r\n            className={styles.postContent}\r\n            dangerouslySetInnerHTML={{ __html: read.post.content }}\r\n          ></div>\r\n        </div>\r\n      </section>\r\n      <section className={styles.modalComment}>\r\n        <LikesAndViews\r\n          views={study.views}\r\n          likeUser={study.likes}\r\n          likes={study.likesCount}\r\n          studyId={study._id}\r\n          userId={user.id}\r\n        ></LikesAndViews>\r\n\r\n        <div className={styles.postComment}>\r\n          <CommentContainer id={study._id}></CommentContainer>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostModal;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\dropdown_bar\\dropdownBar.jsx",["255","256","257"],"import React from \"react\";\r\nimport styles from \"./dropdownBar.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { clearUser } from \"../../store/user\";\r\nimport authService from \"../../service/auth_service\";\r\nimport { clearStep, nextStep } from \"../../store/loginStep\";\r\n/* \r\n\r\nloginUser Component에서 DropDown bar button CLick시 rendering 되는 component로,\r\n닉네임, 작성 글, 찜한 글, 로그아웃으로 구성되어 있습니다.\r\n\r\n로그아웃의 경우 handleLogout을 통해 user를 초기화하는 과정을 진행하며\r\nAPI를 통해 refresh token을 초기화 합니다.\r\n\r\n*/\r\n\r\nconst DropdownBar = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    authService.logout().then((response) => {\r\n      dispatch(clearUser());\r\n      dispatch(clearStep());\r\n    });\r\n  };\r\n  return (\r\n    <div className={styles.menuWrapper}>\r\n      <ul className={styles.menu}>\r\n        <li className={styles.menuItem}>\r\n          <Link to=\"/list\" style={{ display: \"inline-block\" }}>\r\n            내 작성글\r\n          </Link>\r\n        </li>\r\n        <li className={styles.menuItem}>\r\n          <Link to=\"/list\" style={{ display: \"inline-block\" }}>\r\n            찜한 글\r\n          </Link>\r\n        </li>\r\n        <li className={styles.menuItem}>\r\n          <Link to=\"/setting\" style={{ display: \"inline-block\" }}>\r\n            설정\r\n          </Link>\r\n        </li>\r\n        <li className={styles.menuItem} onClick={handleLogout}>\r\n          로그아웃\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownBar;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\modal\\portal\\portal.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\google_button\\googleButton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\github_button\\githubButton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\login_button\\kakao_button\\kakaoButton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\like_languages\\likeLanguages.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\user_image_upload\\userImageUpload.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\store\\read.js",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\comment_container\\commentContainer.jsx",["258"],"import React, { useEffect, useState } from \"react\";\r\nimport CommentInput from \"../comment_input/commentInput\";\r\nimport CommentList from \"../comment_list/commentList\";\r\nimport studyService from \"../../service/study_service\";\r\n\r\nconst CommentContainer = ({ id }) => {\r\n  const [commentList, setCommentList] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n  const [isComplete, setIsComplete] = useState(false);  // useEffect 발생용 state\r\n  \r\n  // 댓글 등록 버튼\r\n  const onRegisterClick = async (e) => {\r\n    await studyService.registerComment({ id, content });\r\n    setContent(\"\");\r\n    setIsComplete(isComplete => !isComplete);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    studyService.getComments(id).then((response) => {\r\n      console.log(`comment useeffect!!!`);\r\n      setCommentList(response.data.comments);\r\n    });\r\n  }, [isComplete]);\r\n\r\n  return (\r\n    <>\r\n      <CommentInput \r\n        content={content}\r\n        setContent={setContent} \r\n        onRegisterClick={onRegisterClick}\r\n        count={commentList.length}>\r\n      </CommentInput>\r\n      <CommentList\r\n        CommentList={commentList}\r\n        setIsComplete={setIsComplete}\r\n        isComplete={isComplete}>\r\n      </CommentList>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default CommentContainer;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\comment_input\\commentInput.jsx",["259"],"import React, { useState } from \"react\";\r\nimport styles from \"./commentInput.module.css\";\r\n\r\nconst CommentInput = ({ content, setContent, onRegisterClick, count }) => {\r\n  return (\r\n    <div className={styles.commentInput}>\r\n      <h1>{count}개의 댓글이 있습니다.</h1>\r\n      <textarea\r\n        placeholder=\"댓글을 입력하세요.\"\r\n        value={content}\r\n        onChange={(e) => {\r\n          setContent(e.target.value);\r\n        }}\r\n      ></textarea>\r\n      <div className={styles.buttonWrapper}>\r\n        <button\r\n          onClick={onRegisterClick}\r\n          className={styles.buttonComplete}\r\n          name=\"register\"\r\n        >\r\n          댓글 등록\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentInput;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\comment_list\\commentList.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\comment_item\\commentItem.jsx",["260","261"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"./commentItem.module.css\";\r\nimport studyService from \"../../service/study_service\";\r\nimport { formatDate } from \"../../common/utils.js\";\r\nimport { fetchUserByRefreshToken } from \"../../store/user\";\r\n\r\nconst CommentItem = React.memo(({ comment, setIsComplete, isComplete }) => {\r\n  const user = useSelector((state) => state.user);\r\n  const [content, setContent] = useState(comment.content);\r\n  const [preContent, setPreContent] = useState(comment.content);\r\n  const [inputVisible, setInputVisible] = useState(false); // 댓글 입력 여부\r\n  const defaultImage =\r\n    \"https://media.vlpt.us/images/seeh_h/profile/6b7bfde5-b67c-4665-a2e1-a308e8de2059/tt.PNG?w=120\";\r\n  const dispatch = useDispatch();\r\n\r\n  // 댓글 수정 버튼 클릭\r\n  const onModifyClick = () => {\r\n    setInputVisible(true);\r\n  };\r\n\r\n  // 댓글 삭제 버튼 클릭\r\n  const onDeleteClick = async () => {\r\n    setInputVisible(false);\r\n    await studyService.deleteComment({ id: comment._id });\r\n    setIsComplete((isComplete) => !isComplete);\r\n  };\r\n\r\n  // 댓글 수정 완료 버튼 클릭\r\n  const onModifyCompleteClick = async () => {\r\n    const response = await studyService.modifyComment({\r\n      id: comment._id,\r\n      content,\r\n    });\r\n    console.log(typeof response);\r\n    if (response === 401) {\r\n      dispatch(fetchUserByRefreshToken());\r\n      await studyService.modifyComment({ id: comment._id, content });\r\n    }\r\n    setInputVisible(false);\r\n  };\r\n\r\n  // 댓글 취소 버튼 클릭\r\n  const onCancelClick = () => {\r\n    setContent(preContent);\r\n    setInputVisible(false);\r\n  };\r\n\r\n  // 수정, 삭제 버튼 컨트롤\r\n  const ButtonControl = () => {\r\n    return (\r\n      <section className={styles.buttonWrapper}>\r\n        <button onClick={onModifyClick}>수정</button>\r\n        <button onClick={onDeleteClick}>삭제</button>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className={styles.commentHeader}>\r\n        <img\r\n          className={styles.userImg}\r\n          src={\r\n            comment.author.image\r\n              ? `https://hola-post-image.s3.ap-northeast-2.amazonaws.com/${comment.author.image}`\r\n              : defaultImage\r\n          }\r\n          alt=\"사용자 이미지\"\r\n        />\r\n        <div className={styles.commentInfo}>\r\n          <div className={styles.title}>\r\n            <div className={styles.registeredDate}>\r\n              {formatDate(comment.createdAt)}\r\n            </div>\r\n            <div>{comment.author.nickName}</div>\r\n          </div>\r\n        </div>\r\n        {user.nickName == comment.author.nickName && (\r\n          <ButtonControl></ButtonControl>\r\n        )}\r\n      </section>\r\n      <section className={styles.commentContent}>\r\n        {inputVisible && (\r\n          <React.Fragment>\r\n            <div className={styles.commentInput}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"contentInput\"\r\n                value={content}\r\n                placeholder={comment.content}\r\n                onChange={(e) => {\r\n                  setContent(e.target.value);\r\n                }}\r\n              />\r\n              <div className={styles.commentInputButton}>\r\n                <button\r\n                  onClick={onCancelClick}\r\n                  className={styles.buttonCancel}\r\n                  name=\"complete\"\r\n                >\r\n                  취소\r\n                </button>\r\n                <button\r\n                  onClick={onModifyCompleteClick}\r\n                  className={styles.buttonComplete}\r\n                  name=\"cancel\"\r\n                >\r\n                  완료\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        {!inputVisible && <p>{content}</p>}\r\n      </section>\r\n      <hr />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default CommentItem;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\likes_and_views\\likesAndViews.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\cancelButton\\cancelButton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\top_bar\\topBar.jsx",["262","263"],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { previousStep } from \"../../store/loginStep\";\r\nimport styles from \"./topBar.module.css\";\r\nconst TopBar = ({ handleClick }) => {\r\n  return (\r\n    <img\r\n      className={styles.backButton}\r\n      onClick={handleClick}\r\n      src=\"/images/info/arrow-left.png\"\r\n      alt=\"back-button\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\social_login_container\\socialLoginContainer.jsx",["264"],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\set_nickname_container\\setNicknameContainer.jsx",["265","266"],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\write_button\\writebuttonContainer.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\write_button\\writebutton.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\set_nickname\\setNickname.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\social_login\\socialLogin.jsx",[],"C:\\Users\\Sihyun\\OneDrive\\바탕 화면\\web\\hola_local\\hola\\client\\src\\component\\top_bar_container\\topBarContainer.jsx",[],{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"275","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"271","severity":1,"message":"276","line":7,"column":10,"nodeType":"273","messageId":"274","endLine":7,"endColumn":21},{"ruleId":"271","severity":1,"message":"277","line":7,"column":23,"nodeType":"273","messageId":"274","endLine":7,"endColumn":34},{"ruleId":"271","severity":1,"message":"278","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":33},{"ruleId":"271","severity":1,"message":"279","line":8,"column":35,"nodeType":"273","messageId":"274","endLine":8,"endColumn":44},{"ruleId":"271","severity":1,"message":"276","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":21},{"ruleId":"271","severity":1,"message":"278","line":10,"column":10,"nodeType":"273","messageId":"274","endLine":10,"endColumn":33},{"ruleId":"271","severity":1,"message":"279","line":10,"column":35,"nodeType":"273","messageId":"274","endLine":10,"endColumn":44},{"ruleId":"280","severity":1,"message":"281","line":49,"column":58,"nodeType":"282","messageId":"283","endLine":49,"endColumn":60},{"ruleId":"284","severity":1,"message":"285","line":65,"column":6,"nodeType":"286","endLine":65,"endColumn":8,"suggestions":"287"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":28,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"284","severity":1,"message":"288","line":53,"column":6,"nodeType":"286","endLine":53,"endColumn":40,"suggestions":"289"},{"ruleId":"271","severity":1,"message":"290","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":26},{"ruleId":"271","severity":1,"message":"291","line":52,"column":10,"nodeType":"273","messageId":"274","endLine":52,"endColumn":15},{"ruleId":"271","severity":1,"message":"292","line":52,"column":17,"nodeType":"273","messageId":"274","endLine":52,"endColumn":25},{"ruleId":"271","severity":1,"message":"293","line":53,"column":10,"nodeType":"273","messageId":"274","endLine":53,"endColumn":23},{"ruleId":"271","severity":1,"message":"294","line":53,"column":25,"nodeType":"273","messageId":"274","endLine":53,"endColumn":41},{"ruleId":"284","severity":1,"message":"295","line":74,"column":6,"nodeType":"286","endLine":74,"endColumn":8,"suggestions":"296"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"297","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":19},{"ruleId":"271","severity":1,"message":"298","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":18},{"ruleId":"271","severity":1,"message":"276","line":5,"column":10,"nodeType":"273","messageId":"274","endLine":5,"endColumn":21},{"ruleId":"271","severity":1,"message":"299","line":6,"column":10,"nodeType":"273","messageId":"274","endLine":6,"endColumn":23},{"ruleId":"271","severity":1,"message":"300","line":6,"column":25,"nodeType":"273","messageId":"274","endLine":6,"endColumn":40},{"ruleId":"271","severity":1,"message":"301","line":7,"column":8,"nodeType":"273","messageId":"274","endLine":7,"endColumn":20},{"ruleId":"271","severity":1,"message":"302","line":8,"column":8,"nodeType":"273","messageId":"274","endLine":8,"endColumn":20},{"ruleId":"271","severity":1,"message":"303","line":9,"column":8,"nodeType":"273","messageId":"274","endLine":9,"endColumn":19},{"ruleId":"271","severity":1,"message":"304","line":10,"column":10,"nodeType":"273","messageId":"274","endLine":10,"endColumn":18},{"ruleId":"271","severity":1,"message":"305","line":11,"column":8,"nodeType":"273","messageId":"274","endLine":11,"endColumn":23},{"ruleId":"271","severity":1,"message":"306","line":12,"column":8,"nodeType":"273","messageId":"274","endLine":12,"endColumn":20},{"ruleId":"271","severity":1,"message":"290","line":13,"column":10,"nodeType":"273","messageId":"274","endLine":13,"endColumn":26},{"ruleId":"271","severity":1,"message":"307","line":14,"column":8,"nodeType":"273","messageId":"274","endLine":14,"endColumn":21},{"ruleId":"271","severity":1,"message":"308","line":15,"column":8,"nodeType":"273","messageId":"274","endLine":15,"endColumn":14},{"ruleId":"271","severity":1,"message":"306","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":20},{"ruleId":"271","severity":1,"message":"309","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":13},{"ruleId":"271","severity":1,"message":"310","line":4,"column":16,"nodeType":"273","messageId":"274","endLine":4,"endColumn":27},{"ruleId":"271","severity":1,"message":"304","line":7,"column":21,"nodeType":"273","messageId":"274","endLine":7,"endColumn":29},{"ruleId":"271","severity":1,"message":"311","line":19,"column":9,"nodeType":"273","messageId":"274","endLine":19,"endColumn":13},{"ruleId":"284","severity":1,"message":"312","line":23,"column":6,"nodeType":"286","endLine":23,"endColumn":18,"suggestions":"313"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"314","line":11,"column":22,"nodeType":"273","messageId":"274","endLine":11,"endColumn":35},{"ruleId":"315","severity":1,"message":"316","line":79,"column":24,"nodeType":"317","messageId":"318","endLine":79,"endColumn":26},{"ruleId":"271","severity":1,"message":"276","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":21},{"ruleId":"271","severity":1,"message":"319","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":22},{"ruleId":"271","severity":1,"message":"320","line":5,"column":25,"nodeType":"273","messageId":"274","endLine":5,"endColumn":32},{"ruleId":"271","severity":1,"message":"277","line":2,"column":23,"nodeType":"273","messageId":"274","endLine":2,"endColumn":34},{"ruleId":"271","severity":1,"message":"320","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'fetchUserByRefreshToken' is defined but never used.","'clearUser' is defined but never used.","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.nickName'. Either include it or remove the dependency array.","ArrayExpression",["323"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["324"],"'getFormatedToday' is defined but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'likeLanguages' is assigned a value but never used.","'setLikeLanguages' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'user.nickName'. Either include it or remove the dependency array.",["325"],"'GoogleLogin' is defined but never used.","'KakaoLogin' is defined but never used.","'fetchUserById' is defined but never used.","'addUserNickName' is defined but never used.","'GoogleButton' is defined but never used.","'GithubButton' is defined but never used.","'KakaoButton' is defined but never used.","'nextStep' is defined but never used.","'UserImageUpload' is defined but never used.","'studyService' is defined but never used.","'LikeLanguages' is defined but never used.","'TopBar' is defined but never used.","'Modal' is defined but never used.","'useLocation' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["326"],"'setPreContent' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'previousStep' is defined but never used.","'setUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"327","fix":"331"},{"desc":"332","fix":"333"},"Update the dependencies array to be: [user.nickName]",{"range":"334","text":"335"},"Update the dependencies array to be: [dispatch, history, user.id, user.nickName]",{"range":"336","text":"337"},{"range":"338","text":"335"},"Update the dependencies array to be: [id, isComplete]",{"range":"339","text":"340"},[2283,2285],"[user.nickName]",[1792,1826],"[dispatch, history, user.id, user.nickName]",[2278,2280],[826,838],"[id, isComplete]"]